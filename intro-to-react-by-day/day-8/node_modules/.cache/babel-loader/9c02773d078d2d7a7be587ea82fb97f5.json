{"ast":null,"code":"var _jsxFileName = \"/home/husseinroot/react-tutorial/intro-to-react-by-day/day-8/src/App.js\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport \"./App.css\";\nimport PokemonType from \"./PokemonType\";\nimport PokemonRow from \"/components/PokemonRow\";\n\nconst PokemonInfo = ({\n  name: {\n    english\n  },\n  base\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, english), /*#__PURE__*/React.createElement(\"table\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, Object.keys(base).map(key => /*#__PURE__*/React.createElement(\"tr\", {\n  key: key,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n}, key), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n}, base[key]))))));\n\nPokemonInfo.propTypes = PokemonType;\nconst Title = styled.h1`\n  text-align: center;\n`;\nconst PageContainer = styled.div`\n  margin: auto;\n  width: 800px;\n  padding-top: 1em;\n`;\nconst TwoColumnLayout = styled.div`\n  display: grid;\n  grid-template-columns: 80% 20%;\n  grid-column-gap: 1rem;\n`;\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.2rem;\n  font-size: large;\n`;\n\nfunction App() {\n  const [filter, filterSet] = React.useState(\"\");\n  const [pokemon, pokemonSet] = React.useState(null);\n  const [selectedPokemon, selectedPokemonSet] = React.useState(null);\n  React.useEffect(() => {\n    fetch(\"/starting-react/pokemon.json\").then(resp => resp.json()).then(data => pokemonSet(data));\n  }, []);\n\n  if (!pokemon) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }, \"Loading data\");\n  }\n\n  return /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Pokemon Search\"), /*#__PURE__*/React.createElement(TwoColumnLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: filter,\n    onChange: evt => filterSet(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, pokemon.filter(({\n    name: {\n      english\n    }\n  }) => english.toLocaleLowerCase().includes(filter.toLocaleLowerCase())).slice(0, 20).map(pokemon => /*#__PURE__*/React.createElement(PokemonRow, {\n    pokemon: pokemon,\n    onClick: pokemon => selectedPokemonSet(pokemon),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }))))), selectedPokemon && /*#__PURE__*/React.createElement(PokemonInfo, Object.assign({}, selectedPokemon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/husseinroot/react-tutorial/intro-to-react-by-day/day-8/src/App.js"],"names":["React","styled","CssBaseline","PokemonType","PokemonRow","PokemonInfo","name","english","base","Object","keys","map","key","propTypes","Title","h1","PageContainer","div","TwoColumnLayout","Input","input","App","filter","filterSet","useState","pokemon","pokemonSet","selectedPokemon","selectedPokemonSet","useEffect","fetch","then","resp","json","data","evt","target","value","toLocaleLowerCase","includes","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport \"./App.css\";\n\nimport PokemonType from \"./PokemonType\";\nimport PokemonRow from \"/components/PokemonRow\";\n\nconst PokemonInfo = ({ name: { english }, base }) => (\n  <div>\n    <h2>{english}</h2>\n    <table>\n      <tbody>\n        {Object.keys(base).map((key) => (\n          <tr key={key}>\n            <td>{key}</td>\n            <td>{base[key]}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nPokemonInfo.propTypes = PokemonType;\n\nconst Title = styled.h1`\n  text-align: center;\n`;\nconst PageContainer = styled.div`\n  margin: auto;\n  width: 800px;\n  padding-top: 1em;\n`;\nconst TwoColumnLayout = styled.div`\n  display: grid;\n  grid-template-columns: 80% 20%;\n  grid-column-gap: 1rem;\n`;\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.2rem;\n  font-size: large;\n`;\n\nfunction App() {\n  const [filter, filterSet] = React.useState(\"\");\n  const [pokemon, pokemonSet] = React.useState(null);\n  const [selectedPokemon, selectedPokemonSet] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch(\"/starting-react/pokemon.json\")\n      .then((resp) => resp.json())\n      .then((data) => pokemonSet(data));\n  }, []);\n\n  if (!pokemon) {\n    return <div>Loading data</div>;\n  }\n\n  return (\n    <PageContainer>\n      <CssBaseline />\n      <Title>Pokemon Search</Title>\n      <TwoColumnLayout>\n        <div>\n          <Input\n            type=\"text\"\n            value={filter}\n            onChange={(evt) => filterSet(evt.target.value)}\n          />\n          <table width=\"100%\">\n            <tbody>\n              {pokemon\n                .filter(({ name: { english } }) =>\n                  english\n                    .toLocaleLowerCase()\n                    .includes(filter.toLocaleLowerCase())\n                )\n                .slice(0, 20)\n                .map((pokemon) => (\n                  <PokemonRow\n                    pokemon={pokemon}\n                    onClick={(pokemon) => selectedPokemonSet(pokemon)}\n                  />\n                ))}\n            </tbody>\n          </table>\n        </div>\n        {selectedPokemon && <PokemonInfo {...selectedPokemon} />}\n      </TwoColumnLayout>\n    </PageContainer>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}